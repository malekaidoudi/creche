#!/usr/bin/env node

/**
 * Script de d√©ploiement simple - Railway + Vercel
 */

const { execSync } = require('child_process');
const fs = require('fs');

function log(message, color = '\x1b[36m') {
  console.log(`${color}${message}\x1b[0m`);
}

function exec(command, cwd = '.') {
  log(`Ex√©cution: ${command}`);
  return execSync(command, { cwd, stdio: 'inherit', encoding: 'utf8' });
}

async function main() {
  try {
    log('üöÄ D√âPLOIEMENT SIMPLE - RAILWAY + VERCEL', '\x1b[33m');
    
    // 1. Backend sur Railway
    log('üì¶ D√©ploiement backend sur Railway...');
    process.chdir('./backend');
    
    // V√©rifier la connexion Railway
    try {
      exec('railway whoami');
      log('‚úÖ Connect√© √† Railway');
    } catch (error) {
      log('üîë Connexion √† Railway requise...');
      exec('railway login');
    }
    
    // D√©ployer
    exec('railway up --detach');
    log('‚è≥ Backend en cours de d√©ploiement...');
    process.chdir('..');
    
    // 2. Frontend sur Vercel
    log('üé® D√©ploiement frontend sur Vercel...');
    process.chdir('./frontend');
    
    // V√©rifier la connexion Vercel
    try {
      exec('vercel whoami');
      log('‚úÖ Connect√© √† Vercel');
    } catch (error) {
      log('üîë Connexion √† Vercel requise...');
      exec('vercel login');
    }
    
    // D√©ployer
    exec('vercel --prod --yes');
    process.chdir('..');
    
    log('‚úÖ D√©ploiement termin√© !', '\x1b[32m');
    log('üåê V√©rifiez vos applications:', '\x1b[36m');
    log('   - Backend: https://creche-backend.railway.app');
    log('   - Frontend: https://creche-frontend.vercel.app');
    log('‚ö†Ô∏è  Les services peuvent prendre 2-3 minutes √† d√©marrer');
    
  } catch (error) {
    log(`‚ùå Erreur: ${error.message}`, '\x1b[31m');
    log('üí° V√©rifiez que Railway CLI et Vercel CLI sont install√©s');
  }
}

main();
