const { query } = require('../config/database');

const resetDatabase = async () => {
  try {
    console.log('üîÑ R√©initialisation compl√®te de la base de donn√©es...');

    // D√©sactiver les contraintes de cl√©s √©trang√®res temporairement
    await query('SET FOREIGN_KEY_CHECKS = 0');

    // Supprimer toutes les tables dans l'ordre inverse des d√©pendances
    const tables = [
      'enrollment_documents',
      'attendance', 
      'logs',
      'uploads',
      'enrollments',
      'children',
      'users',
      'settings',
      'documents',
      'articles',
      'contacts'
    ];

    console.log('üóëÔ∏è Suppression des tables existantes...');
    for (const table of tables) {
      try {
        await query(`DROP TABLE IF EXISTS ${table}`);
        console.log(`   ‚úÖ Table ${table} supprim√©e`);
      } catch (error) {
        console.log(`   ‚ö†Ô∏è Table ${table} n'existait pas`);
      }
    }

    // R√©activer les contraintes de cl√©s √©trang√®res
    await query('SET FOREIGN_KEY_CHECKS = 1');

    console.log('‚úÖ Toutes les tables supprim√©es');
    console.log('üîÑ Maintenant, ex√©cutez: npm run db:init && npm run seed');

  } catch (error) {
    console.error('‚ùå Erreur lors de la r√©initialisation :', error);
    throw error;
  }
};

// Ex√©cuter le script si appel√© directement
if (require.main === module) {
  resetDatabase()
    .then(() => {
      console.log('‚úÖ R√©initialisation termin√©e');
      process.exit(0);
    })
    .catch((error) => {
      console.error('‚ùå Erreur fatale :', error);
      process.exit(1);
    });
}

module.exports = { resetDatabase };
